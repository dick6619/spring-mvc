<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:batch="http://www.springframework.org/schema/batch"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
			http://www.springframework.org/schema/beans/spring-beans.xsd
			http://www.springframework.org/schema/batch
			http://www.springframework.org/schema/batch/spring-batch.xsd
			http://www.springframework.org/schema/context
			http://www.springframework.org/schema/context/spring-context.xsd
			">
			
	
	<!-- JobDetailFactory -->
	<!-- job1 -->
	<bean name="job1" class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
		<property name="jobClass" value="com.iii.emp.batch.job001.JobEmp" />
		<property name="jobDataMap">
			<map>
			    <!-- 需實作序列化 -->
				<entry key="printMessege" value-ref="printMessege" />
			</map>
		</property>
		<property name="durability" value="true" />
	</bean>
	<bean id="printMessege" class="com.iii.emp.domain.PrintMessege" />
	
	<bean name="job2" class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
		<property name="jobClass" value="com.iii.emp.batch.job001.JobEmp2" />
		<property name="jobDataMap">
			<map>
			    <!-- application get beanName -->
				<entry key="serviceID" value="messegePrintService" />
			</map>
		</property>
		<property name="durability" value="true" />
	</bean>
	
	<!-- CronTriggerFactory -->
	<!-- trigger1 -->
	<bean id="trigger1" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail" ref="job1" />
		<property name="cronExpression" value="0 0/1 * * * ?" />
	</bean>
	<!-- trigger2 -->
	<bean id="trigger2" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail" ref="job2" />
		<property name="cronExpression" value="0 0/2 * * * ?" />
	</bean>
	
	<!-- schedulerFactory -->
	<bean id="schedulerFactoryBean" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
        <property name="triggers">
            <list>
                <ref bean="trigger1"/>
                <ref bean="trigger2"/>
            </list>
        </property>
        <!-- 資料庫存取觸發時間等等相關資訊(實現永續化) -->
        <property name="dataSource" ref="dataSource"/>
        <property name="transactionManager" ref="transactionManager"/>
<!--         <property name="jobFactory"> -->
<!--             <bean class="org.springframework.scheduling.quartz.SpringBeanJobFactory"/> -->
<!--         </property> -->
        <!-- 可以拿到applicationContext -->
        <property name="applicationContextSchedulerContextKey" value="applicationContext" />
        <!-- 覆蓋原來存在的實體 -->
        <property name="overwriteExistingJobs" value="true" />
        <property name="waitForJobsToCompleteOnShutdown" value="false" />
       
    </bean>
    <!-- 設定及SQL部分 -->
    <!-- quartz.properties -->
    <!-- org.quartz.quartz.properties -->
    <!-- insert sql -->
    <!-- org.quartz.impl.jdbcjobstore -->
</beans>